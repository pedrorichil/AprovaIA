-- Script SQL para PostgreSQL - AprovaIA

-- M√≥dulo 1: N√∫cleo do Usu√°rio e Autentica√ß√£o üë§
CREATE TABLE Planos_Assinatura (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    descricao TEXT,
    limite_questoes_dia INT
);
COMMENT ON TABLE Planos_Assinatura IS 'Tabela que armazena os diferentes planos de assinatura dispon√≠veis (ex: Gratuito, Premium).';
COMMENT ON COLUMN Planos_Assinatura.id IS 'Identificador √∫nico do plano.';
COMMENT ON COLUMN Planos_Assinatura.nome IS 'Nome do plano (Ex: "Gratuito", "Premium Mensal").';

CREATE TABLE Mentores_IA (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    personalidade_descricao TEXT
);
COMMENT ON TABLE Mentores_IA IS 'Tabela que armazena as diferentes personalidades de mentores IA dispon√≠veis.';

CREATE TABLE Usuarios (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_completo VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    senha_hash VARCHAR(255) NOT NULL,
    xp_total BIGINT DEFAULT 0,
    nivel INT DEFAULT 1,
    ofensiva_dias INT DEFAULT 0,
    id_plano_assinatura INT,
    id_mentor_escolhido INT,
    data_cadastro TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_plano_assinatura) REFERENCES Planos_Assinatura(id),
    FOREIGN KEY (id_mentor_escolhido) REFERENCES Mentores_IA(id)
);
COMMENT ON TABLE Usuarios IS 'Tabela central para armazenar informa√ß√µes dos usu√°rios da plataforma.';

-- M√≥dulo 2: Conte√∫do e Estrutura de Aprendizagem üìö
CREATE TABLE Objetivos (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    descricao TEXT
);
COMMENT ON TABLE Objetivos IS 'Tabela para armazenar os grandes objetivos de estudo que os usu√°rios podem perseguir (ex: ENEM, Concursos).';

CREATE TABLE Competencias (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    id_objetivo INT,
    id_pai INT,
    FOREIGN KEY (id_objetivo) REFERENCES Objetivos(id),
    FOREIGN KEY (id_pai) REFERENCES Competencias(id)
);
COMMENT ON TABLE Competencias IS 'Tabela para definir as compet√™ncias e sub-compet√™ncias de estudo, organizadas hierarquicamente.';

CREATE TABLE Conteudos (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    titulo VARCHAR(255) NOT NULL,
    corpo TEXT,
    formato VARCHAR(20) NOT NULL,
    id_competencia INT NOT NULL,
    FOREIGN KEY (id_competencia) REFERENCES Competencias(id)
);
COMMENT ON TABLE Conteudos IS 'Tabela que armazena as "p√≠lulas de conhecimento" em diversos formatos.';

CREATE TABLE Questoes (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    enunciado TEXT NOT NULL,
    opcoes JSONB,
    resposta_correta VARCHAR(10) NOT NULL,
    texto_justificativa TEXT,
    id_competencia INT NOT NULL,
    FOREIGN KEY (id_competencia) REFERENCES Competencias(id)
);
COMMENT ON TABLE Questoes IS 'Tabela para armazenar as quest√µes de m√∫ltipla escolha ou outros formatos.';
COMMENT ON COLUMN Questoes.opcoes IS 'Um JSON com as op√ß√µes da quest√£o. Ex: [{"id": "A", "texto": "..."}, {"id": "B", ...}]. Usar JSONB para melhor performance.';

-- M√≥dulo 3: A Jornada de Aprendizagem (IA) üöÄ
CREATE TABLE Planos_Estudo (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario INT NOT NULL,
    id_objetivo INT NOT NULL,
    data_criacao TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    ativo BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_objetivo) REFERENCES Objetivos(id)
);
COMMENT ON TABLE Planos_Estudo IS 'Armazena os planos de estudo gerados pela IA para os usu√°rios.';

CREATE TABLE Tarefas_Diarias (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_plano_estudo INT NOT NULL,
    data_prevista DATE NOT NULL,
    tipo_recurso VARCHAR(20) NOT NULL,
    id_recurso INT NOT NULL,
    status VARCHAR(20) DEFAULT 'pendente',
    ordem INT,
    FOREIGN KEY (id_plano_estudo) REFERENCES Planos_Estudo(id) ON DELETE CASCADE
);
COMMENT ON TABLE Tarefas_Diarias IS 'Define as tarefas espec√≠ficas (estudar um conte√∫do ou responder uma quest√£o) para cada dia dentro de um plano de estudo.';

CREATE TABLE Respostas_Usuario (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario INT NOT NULL,
    id_questao INT NOT NULL,
    resposta_fornecida VARCHAR(10),
    foi_correta BOOLEAN,
    tempo_gasto_ms INT,
    data_resposta TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_questao) REFERENCES Questoes(id) ON DELETE CASCADE
);
COMMENT ON TABLE Respostas_Usuario IS 'Registra as respostas fornecidas pelos usu√°rios √†s quest√µes.';

CREATE TABLE Caderno_Inteligente_Entradas (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario INT NOT NULL,
    tipo_entrada VARCHAR(20) NOT NULL,
    id_conteudo INT,
    texto_destacado TEXT,
    id_questao INT,
    data_adicao TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_conteudo) REFERENCES Conteudos(id) ON DELETE SET NULL,
    FOREIGN KEY (id_questao) REFERENCES Questoes(id) ON DELETE SET NULL
);
COMMENT ON TABLE Caderno_Inteligente_Entradas IS 'Armazena entradas no "caderno inteligente" do usu√°rio, como destaques em textos ou quest√µes erradas para revis√£o.';


-- M√≥dulo 4: Gamifica√ß√£o e Engajamento üèÖ
CREATE TABLE Conquistas (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    icone_url VARCHAR(255)
);
COMMENT ON TABLE Conquistas IS 'Define as medalhas e conquistas que os usu√°rios podem ganhar.';

CREATE TABLE Usuarios_Conquistas (
    id_usuario INT NOT NULL,
    id_conquista INT NOT NULL,
    data_obtencao TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id_usuario, id_conquista),
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_conquista) REFERENCES Conquistas(id) ON DELETE CASCADE
);
COMMENT ON TABLE Usuarios_Conquistas IS 'Tabela de liga√ß√£o para registrar quais usu√°rios ganharam quais conquistas.';

-- M√≥dulo 5: Funcionalidades Sociais (Esquadr√µes) ü§ù
CREATE TABLE Esquadroes (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    id_objetivo INT,
    data_criacao TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_objetivo) REFERENCES Objetivos(id) ON DELETE SET NULL
);
COMMENT ON TABLE Esquadroes IS 'Tabela para armazenar informa√ß√µes sobre os esquadr√µes (times/grupos) de estudo.';

CREATE TABLE Usuarios_Esquadroes (
    id_usuario INT NOT NULL,
    id_esquadrao INT NOT NULL,
    cargo VARCHAR(20) DEFAULT 'membro',
    PRIMARY KEY (id_usuario, id_esquadrao),
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_esquadrao) REFERENCES Esquadroes(id) ON DELETE CASCADE
);
COMMENT ON TABLE Usuarios_Esquadroes IS 'Tabela de liga√ß√£o para registrar os membros de cada esquadr√£o e seus cargos.';

-- Adicionando √≠ndices para otimizar consultas comuns:
CREATE INDEX idx_usuarios_email ON Usuarios(email);
CREATE INDEX idx_competencias_id_objetivo ON Competencias(id_objetivo);
CREATE INDEX idx_competencias_id_pai ON Competencias(id_pai);
CREATE INDEX idx_tarefas_diarias_data_prevista ON Tarefas_Diarias(data_prevista);
CREATE INDEX idx_caderno_inteligente_id_usuario ON Caderno_Inteligente_Entradas(id_usuario);