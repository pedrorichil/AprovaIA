-- Script SQL para MariaDB - AprovaIA
-- Certifique-se de que est√° a utilizar o motor de armazenamento InnoDB para suporte a chaves estrangeiras.
-- SET default_storage_engine=InnoDB;

-- M√≥dulo 1: N√∫cleo do Usu√°rio e Autentica√ß√£o üë§
-- Este m√≥dulo gerencia quem s√£o nossos usu√°rios e seus acessos.

CREATE TABLE Planos_Assinatura (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico do plano.',
    nome VARCHAR(50) NOT NULL COMMENT 'Nome do plano (Ex: "Gratuito", "Premium Mensal").',
    descricao TEXT COMMENT 'Detalhes sobre os benef√≠cios do plano.',
    limite_questoes_dia INT COMMENT 'Limite de quest√µes que podem ser respondidas por dia para planos gratuitos (NULL se for ilimitado).'
) COMMENT='Tabela que armazena os diferentes planos de assinatura dispon√≠veis (ex: Gratuito, Premium).';

CREATE TABLE Mentores_IA (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico do mentor IA.',
    nome VARCHAR(50) NOT NULL COMMENT 'Nome da personalidade do mentor IA (Ex: "Sargento", "S√°bia").',
    personalidade_descricao TEXT COMMENT 'Descri√ß√£o do estilo de motiva√ß√£o e comunica√ß√£o do mentor.'
) COMMENT='Tabela que armazena as diferentes personalidades de mentores IA dispon√≠veis.';

CREATE TABLE Usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico do usu√°rio.',
    nome_completo VARCHAR(255) NOT NULL COMMENT 'Nome completo do usu√°rio.',
    email VARCHAR(255) UNIQUE NOT NULL COMMENT 'E-mail do usu√°rio, utilizado para login e deve ser √∫nico.',
    senha_hash VARCHAR(255) NOT NULL COMMENT 'Hash da senha do usu√°rio para armazenamento seguro.',
    xp_total BIGINT DEFAULT 0 COMMENT 'Total de pontos de experi√™ncia acumulados pelo usu√°rio.',
    nivel INT DEFAULT 1 COMMENT 'N√≠vel atual do usu√°rio no sistema, baseado no XP.',
    ofensiva_dias INT DEFAULT 0 COMMENT 'Contador de dias consecutivos de estudo (streak).',
    id_plano_assinatura INT COMMENT 'Chave estrangeira referenciando o plano de assinatura atual do usu√°rio.',
    id_mentor_escolhido INT COMMENT 'Chave estrangeira referenciando a personalidade de IA escolhida pelo usu√°rio como mentor.',
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Data e hora em que o usu√°rio se cadastrou na plataforma.',
    FOREIGN KEY (id_plano_assinatura) REFERENCES Planos_Assinatura(id),
    FOREIGN KEY (id_mentor_escolhido) REFERENCES Mentores_IA(id)
) COMMENT='Tabela central para armazenar informa√ß√µes dos usu√°rios da plataforma.';


-- M√≥dulo 2: Conte√∫do e Estrutura de Aprendizagem üìö
-- Aqui fica todo o conhecimento que a plataforma oferece.

CREATE TABLE Objetivos (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico do objetivo.',
    nome VARCHAR(255) NOT NULL COMMENT 'Nome do objetivo (Ex: "ENEM 2025", "Concurso PRF").',
    descricao TEXT COMMENT 'Breve descri√ß√£o do objetivo.'
) COMMENT='Tabela para armazenar os grandes objetivos de estudo que os usu√°rios podem perseguir (ex: ENEM, Concursos).';

CREATE TABLE Competencias (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico da compet√™ncia.',
    nome VARCHAR(255) NOT NULL COMMENT 'Nome da compet√™ncia (Ex: "Matem√°tica", "An√°lise Combinat√≥ria").',
    id_objetivo INT COMMENT 'Chave estrangeira indicando a qual grande objetivo esta compet√™ncia pertence.',
    id_pai INT COMMENT 'Chave estrangeira para criar a hierarquia (ex: "An√°lise Combinat√≥ria" √© filha de "Matem√°tica"). NULL se for uma compet√™ncia raiz.', -- FK para a pr√≥pria tabela Competencias
    FOREIGN KEY (id_objetivo) REFERENCES Objetivos(id),
    FOREIGN KEY (id_pai) REFERENCES Competencias(id)
) COMMENT='Tabela para definir as compet√™ncias e sub-compet√™ncias de estudo, organizadas hierarquicamente.';

CREATE TABLE Conteudos (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico do conte√∫do.',
    titulo VARCHAR(255) NOT NULL COMMENT 'T√≠tulo da p√≠lula de conhecimento.',
    corpo TEXT COMMENT 'O conte√∫do textual principal. Pode ser NULL dependendo do formato.',
    formato VARCHAR(20) NOT NULL COMMENT 'Tipo do conte√∫do (ex: ''texto'', ''audio_url'', ''video_url'', ''mapa_mental_json'').',
    id_competencia INT NOT NULL COMMENT 'Chave estrangeira indicando a qual compet√™ncia este conte√∫do pertence e ensina.',
    FOREIGN KEY (id_competencia) REFERENCES Competencias(id)
) COMMENT='Tabela que armazena as "p√≠lulas de conhecimento" em diversos formatos.';

CREATE TABLE Questoes (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico da quest√£o.',
    enunciado TEXT NOT NULL COMMENT 'O texto da pergunta da quest√£o.',
    opcoes JSON COMMENT 'Um JSON com as op√ß√µes da quest√£o. Ex: [{"id": "A", "texto": "..."}, {"id": "B", ...}]. (MariaDB usa JSON que √© um alias para LONGTEXT com valida√ß√£o)',
    resposta_correta VARCHAR(10) NOT NULL COMMENT 'O identificador da op√ß√£o correta (Ex: "A").',
    texto_justificativa TEXT COMMENT 'A explica√ß√£o detalhada do porqu√™ da resposta ser a correta.',
    id_competencia INT NOT NULL COMMENT 'Chave estrangeira indicando a qual compet√™ncia esta quest√£o avalia.',
    FOREIGN KEY (id_competencia) REFERENCES Competencias(id)
) COMMENT='Tabela para armazenar as quest√µes de m√∫ltipla escolha ou outros formatos.';


-- M√≥dulo 3: A Jornada de Aprendizagem (IA) üöÄ
-- O cora√ß√£o da personaliza√ß√£o, onde a magia da IA acontece.

CREATE TABLE Planos_Estudo (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico do plano de estudo.',
    id_usuario INT NOT NULL COMMENT 'Chave estrangeira referenciando o usu√°rio dono deste plano.',
    id_objetivo INT NOT NULL COMMENT 'Chave estrangeira referenciando o objetivo principal deste plano de estudo.',
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Data e hora em que o plano de estudo foi gerado pela IA.',
    ativo BOOLEAN DEFAULT TRUE COMMENT 'Indica se este √© o plano de estudo que o usu√°rio est√° seguindo atualmente.',
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_objetivo) REFERENCES Objetivos(id)
) COMMENT='Armazena os planos de estudo gerados pela IA para os usu√°rios.';

CREATE TABLE Tarefas_Diarias (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico da tarefa di√°ria.',
    id_plano_estudo INT NOT NULL COMMENT 'Chave estrangeira referenciando o plano de estudo ao qual esta tarefa pertence.',
    data_prevista DATE NOT NULL COMMENT 'O dia em que esta tarefa deve ser realizada.',
    tipo_recurso VARCHAR(20) NOT NULL COMMENT 'Indica se a tarefa √© estudar um ''conteudo'' ou resolver uma ''questao''.', -- 'conteudo' ou 'questao'
    id_recurso INT NOT NULL COMMENT 'O ID do Conteudo ou Questao a ser estudado/resolvido. A tabela de origem depende do tipo_recurso.', -- ID do Conteudo ou Questao
    status VARCHAR(20) DEFAULT 'pendente' COMMENT 'Status atual da tarefa (ex: ''pendente'', ''concluido'', ''pulado'').', -- 'pendente', 'concluido', 'pulado'
    ordem INT COMMENT 'Ordem de exibi√ß√£o da tarefa no checklist do dia.',
    FOREIGN KEY (id_plano_estudo) REFERENCES Planos_Estudo(id) ON DELETE CASCADE
    -- Nota: id_recurso n√£o pode ter FK direta pois pode ser de Conteudos ou Questoes.
    -- A l√≥gica de qual tabela consultar ser√° feita na aplica√ß√£o.
) COMMENT='Define as tarefas espec√≠ficas (estudar um conte√∫do ou responder uma quest√£o) para cada dia dentro de um plano de estudo.';

CREATE TABLE Respostas_Usuario (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico da resposta.',
    id_usuario INT NOT NULL COMMENT 'Chave estrangeira referenciando o usu√°rio que respondeu.',
    id_questao INT NOT NULL COMMENT 'Chave estrangeira referenciando a quest√£o que foi respondida.',
    resposta_fornecida VARCHAR(10) COMMENT 'Qual op√ß√£o o usu√°rio marcou.',
    foi_correta BOOLEAN COMMENT 'Indica se a resposta do usu√°rio foi correta (true) ou incorreta (false).',
    tempo_gasto_ms INT COMMENT 'Tempo em milissegundos que o usu√°rio levou para responder √† quest√£o.',
    data_resposta TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Data e hora em que a resposta foi enviada.',
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_questao) REFERENCES Questoes(id) ON DELETE CASCADE
) COMMENT='Registra as respostas fornecidas pelos usu√°rios √†s quest√µes.';

CREATE TABLE Caderno_Inteligente_Entradas (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico da entrada no caderno inteligente.',
    id_usuario INT NOT NULL COMMENT 'Chave estrangeira referenciando o dono da entrada.',
    tipo_entrada VARCHAR(20) NOT NULL COMMENT 'Tipo da entrada (ex: ''destaque_texto'', ''erro_questao'').', -- 'destaque_texto' ou 'erro_questao'
    id_conteudo INT COMMENT 'Se for um destaque, aponta para o conte√∫do original (NULLABLE).', -- NULLABLE
    texto_destacado TEXT COMMENT 'O trecho exato que o usu√°rio marcou (NULLABLE).', -- NULLABLE
    id_questao INT COMMENT 'Se for um erro, aponta para a quest√£o errada (NULLABLE).', -- NULLABLE
    data_adicao TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Data e hora em que a entrada foi criada.',
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_conteudo) REFERENCES Conteudos(id) ON DELETE SET NULL,
    FOREIGN KEY (id_questao) REFERENCES Questoes(id) ON DELETE SET NULL
) COMMENT='Armazena entradas no "caderno inteligente" do usu√°rio, como destaques em textos ou quest√µes erradas para revis√£o.';

-- M√≥dulo 4: Gamifica√ß√£o e Engajamento üèÖ

CREATE TABLE Conquistas (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico da medalha/conquista.',
    nome VARCHAR(100) NOT NULL COMMENT 'Nome da conquista (Ex: "Mestre dos 7 Dias", "Primeiro Passo").',
    descricao TEXT COMMENT 'Descri√ß√£o da conquista (Ex: "Parab√©ns! Voc√™ estudou por 7 dias seguidos.").',
    icone_url VARCHAR(255) COMMENT 'Link para a imagem (√≠cone) da medalha.'
) COMMENT='Define as medalhas e conquistas que os usu√°rios podem ganhar.';

CREATE TABLE Usuarios_Conquistas (
    id_usuario INT NOT NULL COMMENT 'Chave estrangeira referenciando o usu√°rio que ganhou a medalha.',
    id_conquista INT NOT NULL COMMENT 'Chave estrangeira referenciando a medalha que foi ganha.',
    data_obtencao TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Data e hora em que a medalha foi ganha.',
    PRIMARY KEY (id_usuario, id_conquista),
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_conquista) REFERENCES Conquistas(id) ON DELETE CASCADE
) COMMENT='Tabela de liga√ß√£o para registrar quais usu√°rios ganharam quais conquistas.';
-- A Chave Prim√°ria Composta (id_usuario, id_conquista) garante que um usu√°rio n√£o ganhe a mesma medalha m√∫ltiplas vezes.

-- M√≥dulo 5: Funcionalidades Sociais (Esquadr√µes) ü§ù

CREATE TABLE Esquadroes (
    id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador √∫nico do esquadr√£o.',
    nome VARCHAR(100) NOT NULL COMMENT 'Nome do esquadr√£o/time.',
    id_objetivo INT COMMENT 'Chave estrangeira opcional indicando se o esquadr√£o √© focado em um objetivo comum.', -- Esquadr√£o focado em um objetivo comum
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Data e hora em que o esquadr√£o foi criado.',
    FOREIGN KEY (id_objetivo) REFERENCES Objetivos(id) ON DELETE SET NULL
) COMMENT='Tabela para armazenar informa√ß√µes sobre os esquadr√µes (times/grupos) de estudo.';

CREATE TABLE Usuarios_Esquadroes (
    id_usuario INT NOT NULL COMMENT 'Chave estrangeira referenciando o usu√°rio membro do esquadr√£o.',
    id_esquadrao INT NOT NULL COMMENT 'Chave estrangeira referenciando o esquadr√£o ao qual o usu√°rio pertence.',
    cargo VARCHAR(20) DEFAULT 'membro' COMMENT 'Cargo do usu√°rio no esquadr√£o (ex: ''lider'', ''membro'').', -- 'lider', 'membro'
    PRIMARY KEY (id_usuario, id_esquadrao),
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (id_esquadrao) REFERENCES Esquadroes(id) ON DELETE CASCADE
) COMMENT='Tabela de liga√ß√£o para registrar os membros de cada esquadr√£o e seus cargos.';

-- M√≥dulo 6: Personaliza√ß√£o e Comunica√ß√£o (Mentor IA) ü§ñ
-- A tabela Mentores_IA j√° foi criada no M√≥dulo 1, pois √© referenciada por Usuarios.
-- Nenhuma tabela adicional √© necess√°ria para este m√≥dulo conforme a descri√ß√£o.

-- Adicionando alguns √≠ndices para otimizar consultas comuns:
-- A sintaxe para CREATE INDEX √© a mesma entre PostgreSQL e MariaDB.

-- M√≥dulo 1
CREATE INDEX idx_usuarios_email ON Usuarios(email);
CREATE INDEX idx_usuarios_id_plano_assinatura ON Usuarios(id_plano_assinatura);
CREATE INDEX idx_usuarios_id_mentor_escolhido ON Usuarios(id_mentor_escolhido);

-- M√≥dulo 2
CREATE INDEX idx_competencias_id_objetivo ON Competencias(id_objetivo);
CREATE INDEX idx_competencias_id_pai ON Competencias(id_pai);
CREATE INDEX idx_conteudos_id_competencia ON Conteudos(id_competencia);
CREATE INDEX idx_questoes_id_competencia ON Questoes(id_competencia);

-- M√≥dulo 3
CREATE INDEX idx_planos_estudo_id_usuario ON Planos_Estudo(id_usuario);
CREATE INDEX idx_planos_estudo_id_objetivo ON Planos_Estudo(id_objetivo);
CREATE INDEX idx_tarefas_diarias_id_plano_estudo ON Tarefas_Diarias(id_plano_estudo);
CREATE INDEX idx_tarefas_diarias_data_prevista ON Tarefas_Diarias(data_prevista);
CREATE INDEX idx_respostas_usuario_id_usuario ON Respostas_Usuario(id_usuario);
CREATE INDEX idx_respostas_usuario_id_questao ON Respostas_Usuario(id_questao);
CREATE INDEX idx_caderno_inteligente_id_usuario ON Caderno_Inteligente_Entradas(id_usuario);
CREATE INDEX idx_caderno_inteligente_id_conteudo ON Caderno_Inteligente_Entradas(id_conteudo);
CREATE INDEX idx_caderno_inteligente_id_questao ON Caderno_Inteligente_Entradas(id_questao);

-- M√≥dulo 4
CREATE INDEX idx_usuarios_conquistas_id_conquista ON Usuarios_Conquistas(id_conquista);

-- M√≥dulo 5
CREATE INDEX idx_esquadroes_id_objetivo ON Esquadroes(id_objetivo);
CREATE INDEX idx_usuarios_esquadroes_id_esquadrao ON Usuarios_Esquadroes(id_esquadrao);

